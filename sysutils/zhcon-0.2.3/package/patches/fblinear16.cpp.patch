--- ./src/display/fblinear16.cpp.orig	2002-05-12 04:58:28.000000000 +0100
+++ ./src/display/fblinear16.cpp	2023-05-21 18:52:44.086083432 +0100
@@ -27,7 +27,9 @@
 
 FBLinear16::FBLinear16() {
     InitColorMap();
+#if defined(OLD_FREEBSD_MODE)
     mNextLine = mNextLine ? mNextLine : mXres<<1;
+#endif
 }
 
 void FBLinear16::InitColorMap() {
@@ -48,8 +50,7 @@
     assert( x1 >= 0 && x1 < mXres && y1 >=0 && y1 < mYres);
     assert( x2 >= 0 && x2 < mXres && y2 >=0 && y2 < mYres);
     assert(x1 <= x2 && y1 <= y2);
-    __u8* dest = (__u8*)mpBuf + mNextLine * y1 + x1 * 2;
-    __u32* dest32;
+    __u8* dest = reinterpret_cast<__u8*>(mpBuf) + mNextLine * y1 + x1 * 2;
 
     __u32 fgx = cfb16[color];
     fgx |= fgx<<16;
@@ -58,12 +59,12 @@
     int width = x2 - x1 + 1;
     int cnt;
     for(; height--; dest += mNextLine) {
-        dest32 = (__u32*)dest;
+        __u32* dest32 = reinterpret_cast<__u32*>(dest);
         for (cnt = width/2; cnt--;) {
-            fb_writel(fgx, dest32++);
+            fb_write(fgx, dest32++);
         }
         if (width & 1)
-           fb_writew(fgx, (__u16*)dest32);
+           fb_write(fgx, (__u16*)dest32);
     }
 }
 
@@ -71,28 +72,28 @@
     assert( x1 >= 0 && x1 < Width() && y1 >=0 && y1 < Height());
     assert( x2 >= 0 && x2 < Width() && y2 >=0 && y2 < Height());
     assert(x1 <= x2 && y1 <= y2);
-    __u8* dest = (__u8*)mpBuf + mNextLine * y1 + x1 * 2;
-    __u16* dest16;
-    __u32* dest32;
+    __u8* dest = reinterpret_cast<__u8*>(mpBuf) + mNextLine * y1 + x1 * 2;
 
     int height = y2 - y1 + 1;
     int width = x2 - x1 + 1;
     int cnt;
     for(; height--; dest += mNextLine) {
-        dest32 = (__u32*)dest;
+        __u32* dest32 = reinterpret_cast<__u32*>(dest);
         for (cnt = width/2; cnt--;) {
-            fb_writel(fb_readl(dest32) ^ 0xffffffff, dest32++);
+            fb_write(fb_read(dest32) ^ 0xffffffff, dest32);
+            ++dest32;
         }
         if (width & 1) {
-           dest16 = (__u16*)dest32;
-           fb_writew(fb_readw(dest16) ^ 0xffff, dest16);
+           __u16* dest16 = reinterpret_cast<__u16*>(dest32);
+           fb_write(fb_read(dest16) ^ 0xffff, dest16);
+           dest32 = reinterpret_cast<__u32*>(++dest16);
         }
     }
 }
 
 inline void FBLinear16::PutPixel(int x,int y,int color) {
     assert( x >= 0 && x < mXres && y >=0 && y < mYres);
-    fb_writew(cfb16[color], mpBuf + mNextLine * y + x * 2);
+    fb_write(cfb16[color], reinterpret_cast<__u16*>(reinterpret_cast<__u8*>(mpBuf) + mNextLine * y + x * 2));
 }
 
 void FBLinear16::DrawChar(int x,int y,int fg,int bg,struct CharBitMap* pFont) {
@@ -103,32 +104,31 @@
     bgx |= (bgx << 16);
     eorx = fgx ^ bgx;
 
-    __u8* dest = ((__u8*)mpBuf + mNextLine * y + x * 2);
-    __u32* dest32;
+    __u8* dest = reinterpret_cast<__u8*>(mpBuf) + mNextLine * y + x * 2;
 
     char* cdat = pFont->pBuf;
     int row, cnt;
     for (row = mBlockHeight; row--; dest += mNextLine ) {
-        dest32 = (__u32*)dest;
+        __u32* dest32 = reinterpret_cast<__u32*>(dest);
         for (cnt = (pFont->w)/8; cnt--;) {
-            fb_writel((tab_cfb16[*cdat >> 6] & eorx) ^ bgx, dest32++);
-            fb_writel((tab_cfb16[*cdat >> 4 & 3] & eorx) ^ bgx, dest32++);
-            fb_writel((tab_cfb16[*cdat >> 2 & 3] & eorx) ^ bgx, dest32++);
-            fb_writel((tab_cfb16[*cdat & 3] & eorx) ^ bgx, dest32++);
+            fb_write((tab_cfb16[*cdat >> 6] & eorx) ^ bgx, dest32++);
+            fb_write((tab_cfb16[*cdat >> 4 & 3] & eorx) ^ bgx, dest32++);
+            fb_write((tab_cfb16[*cdat >> 2 & 3] & eorx) ^ bgx, dest32++);
+            fb_write((tab_cfb16[*cdat & 3] & eorx) ^ bgx, dest32++);
             cdat++;
         }
         if (pFont->isMulti8)
             continue;
 
         if (pFont->w & 4) {
-            fb_writel((tab_cfb16[*cdat >> 6] & eorx) ^ bgx, dest32++);
-            fb_writel((tab_cfb16[*cdat >> 4 & 3] & eorx) ^ bgx, dest32++);
+            fb_write((tab_cfb16[*cdat >> 6] & eorx) ^ bgx, dest32++);
+            fb_write((tab_cfb16[*cdat >> 4 & 3] & eorx) ^ bgx, dest32++);
         }
         if (pFont->w & 2) {
-            fb_writel((tab_cfb16[*cdat >> 2 & 3] & eorx) ^ bgx, dest32++);
+            fb_write((tab_cfb16[*cdat >> 2 & 3] & eorx) ^ bgx, dest32++);
         }
         if (pFont->w & 1) {
-            fb_writew((tab_cfb16[*cdat & 3] & eorx) ^ bgx, (__u16*)dest32);
+            fb_write((tab_cfb16[*cdat & 3] & eorx) ^ bgx, (__u16*)dest32);
         }
         cdat++;
     }
